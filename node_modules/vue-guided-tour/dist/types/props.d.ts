import { PropType } from 'vue';
import { Step, Rect } from './types';
export declare const position: readonly ["top", "left", "right", "bottom"];
export declare const placement: readonly ["start", "center", "end"];
export declare const vueGuidedTourProps: {
    readonly allowInteraction: {
        type: BooleanConstructor;
        default: boolean;
    };
    readonly arrow: {
        type: BooleanConstructor;
        default: boolean;
    };
    readonly offset: {
        type: NumberConstructor;
        default: number;
    };
    readonly position: {
        type: PropType<"top" | "left" | "right" | "bottom">;
        default: string;
        validator: (value: any) => boolean;
    };
    readonly placement: {
        type: PropType<"start" | "center" | "end">;
        default: string;
        validator: (value: any) => boolean;
    };
    readonly autoAdjust: {
        type: BooleanConstructor;
        default: boolean;
    };
    readonly width: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    readonly steps: {
        readonly type: PropType<Step[]>;
        readonly required: true;
        readonly default: () => never[];
    };
    readonly stepIndex: {
        readonly type: NumberConstructor;
        readonly default: -1;
    };
    readonly padding: {
        readonly type: NumberConstructor;
        readonly default: 0;
    };
    readonly useOverlay: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly pagination: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly closeBtn: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly allowKeyboardEvent: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly allowOverlayClose: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly allowEscClose: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly name: {
        readonly type: StringConstructor;
        readonly default: undefined;
    };
};
export declare const vueGuidedOverlayProps: {
    readonly allowInteraction: {
        type: BooleanConstructor;
        default: boolean;
    };
    readonly rect: {
        readonly type: PropType<Rect>;
    };
};
export declare const vueGuidedPopoverProps: {
    readonly arrow: {
        type: BooleanConstructor;
        default: boolean;
    };
    readonly offset: {
        type: NumberConstructor;
        default: number;
    };
    readonly position: {
        type: PropType<"top" | "left" | "right" | "bottom">;
        default: string;
        validator: (value: any) => boolean;
    };
    readonly placement: {
        type: PropType<"start" | "center" | "end">;
        default: string;
        validator: (value: any) => boolean;
    };
    readonly autoAdjust: {
        type: BooleanConstructor;
        default: boolean;
    };
    readonly width: {
        type: (NumberConstructor | StringConstructor)[];
        default: number;
    };
    readonly rect: {
        readonly type: PropType<Rect>;
    };
};
